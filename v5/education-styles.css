/* education-styles.css */

.education-content-wrapper {
  width: 100%;
  max-width: 700px; /* Consistent with personal-info-content */
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  /* font-family will be inherited */
}

.education-title {
  /* font-family: 'Cinzel', serif; */ /* Removed, will inherit */
  font-size: 20px; /* Consistent with personal-info-title */
  margin-top: 0; /* If back button is present and has margin-bottom */
  margin-bottom: 20px;
  text-align: center;
  color: inherit;
}

.education-list {
  display: grid;
  gap: 12px; /* Consistent with info-grid */
}

.education-item {
  /* Reuses .info-item styles from personal-info-styles.css by adding both classes */
  /* Styles specific to education-item if .info-item is not sufficient can go here */
  /* For example, if padding or background needs to be different */
}

.education-item .info-label {
    /* Styles from personal-info-styles.css will apply */
    /* Specific overrides for education labels if needed */
}

.education-item .info-value {
    /* Styles from personal-info-styles.css will apply */
    /* Specific overrides for education values if needed */
}

/* If using field groups for better structure on mobile vs desktop (as in education.js) */
.education-field-group {
    display: contents; /* Behaves as if children are direct children of parent for flex/grid */
}


@media screen and (min-width: 768px) {
  .education-title {
    font-size: 22px; /* Consistent */
  }
  .education-field-group {
    display: flex; /* Override display: contents; for row layout */
    flex-direction: row;
    align-items: baseline; /* Align label and value nicely */
    width: 100%; /* Take full width of the info-item */
    margin-bottom: 8px; /* Space between field groups within an item */
  }
   .education-field-group:last-child {
    margin-bottom: 0;
  }

  .education-item .info-label {
    margin-bottom: 0; /* Remove bottom margin as it's now side-by-side */
    margin-right: 10px; /* Space between label and value */
    flex-shrink: 0; /* Prevent label from shrinking */
    width: 100px; /* Example fixed width for labels */
  }
  .education-item .info-value {
    flex-grow: 1; /* Value takes remaining space */
    text-align: left;
  }
  /* If .info-item is set to flex-direction: column by default, override for desktop */
  .education-item.info-item {
    flex-direction: column; /* Keep items stacked, field groups will be rows */
    align-items: flex-start;
  }
}


@media screen and (max-width: 767px) {
    .education-item.info-item {
        /* Ensure info-item's default mobile styles (flex-direction: column) apply */
    }
    .education-field-group {
        display: flex;
        flex-direction: column; /* Stack label and value on mobile */
        width: 100%;
        margin-bottom: 8px;
    }
     .education-field-group:last-child {
        margin-bottom: 0;
    }
    .education-item .info-label {
        margin-bottom: 4px; /* Space between label and value when stacked */
        margin-right: 0;
    }
}


.no-education-data {
  text-align: center;
  padding: 20px;
  font-style: italic;
  opacity: 0.8;
}